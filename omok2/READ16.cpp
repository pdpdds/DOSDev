/***************************************************/
/* 16 color pcx file을 읽어서 graphic 화면에 출력  */
/* 여기에서 제작된 readpcx16p()함수와 그 부속 함수 */
/* 들은 다른 program에 가져 가서도 그대로 수정없이 */
/* 사용할 수 있도록 만들었음.                      */
/* 제작 년도:1993년 9월. 수정 일시:1994년 5월 10일 */
/* 경희대학교 컴퓨터 연구회 COM.COM 3기 김 상 형 . */
/***************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <graphics.h>
#include <alloc.h>
#include <dos.h>
#include <mem.h>

void readpcx16p(char *,int,int);
void readline16p(FILE *,int,int,int);
void readpalette16(char *);

typedef struct {
   char manufacturer;   /* pcx file 확인 0x0a */
   char version;        /* 버전번호 0x05가 5.0 256칼라 */
   char encoding;       /* 인코딩 방법 0x01-RLL 인코딩 */
   char bpp;            /* 픽셀당 bit수   */
   int xmin,ymin;       /* 그림의 상하좌우 크기 */
   int xmax,ymax;
   int hres;            /* 해상도-전혀 의미가 없음 */
   int vres;
   char palette[48];    /* 팔레트 정보 */
   char reserved;       /* 예약        */
   char colour_planes;  /* 플레인 갯수 HGC=1,VGA=4 */
   int bpl;             /* 줄당 byte 수 */
   int palette_type;
   char filler[58];     /* 예약 영역 */
} PCXHEAD;

void readpcx16p(char *filename,int x,int y)
{
   FILE *fp;
   PCXHEAD hd;
   unsigned int width,depth;
   unsigned int bytes;
   char palette[768];
   int i,j;

   fp=fopen(filename,"rb");

   if (fp==NULL){
       printf("file open Error\n");
       exit(0);
   }

   fseek(fp,-769l,SEEK_END);

   if(fgetc(fp)==0x0c && fread(palette,1,768,fp)== 768) {
      printf("not 16 color,but 256 color\n");
      exit(0);
   }

   fseek(fp,0l,SEEK_SET);
   fread(&hd,1,128,fp);

   if(hd.manufacturer==0x0a && hd.bpp==0x01) {
     if (hd.version!=0x03) readpalette16(hd.palette);
     fseek(fp,128,SEEK_SET);
     for(i=0;i<hd.ymax-hd.ymin+1;i++) readline16p(fp,hd.bpl,x,y+i);
   }
   return;
}

void readpalette16(char *pal_buf)
{
   int i;
   struct REGPACK reg;

   for(i=0;i<48;i++) pal_buf[i]>>=2;
   for(i=0;i<16;i++) {
      reg.r_ax=0x1000;
      reg.r_bx=i*256+i;
      intr(0x10,&reg);
   }
   reg.r_ax=0x1012;
   reg.r_bx=0;
   reg.r_cx=16;
   reg.r_es=FP_SEG(pal_buf);
   reg.r_dx=FP_OFF(pal_buf);
   intr(0x10,&reg);
   return;
}

void readline16p(FILE *fp,int len,int x,int y)
{
   int i,j,k,n;
   char temp[1040];
   char col[1040];

   n=0;
   do {
      i=fgetc(fp);
      if((i&0xc0)==0xc0) {
	 i=i&0x3f;
	 j=fgetc(fp);
	 while(i--) temp[n++]=j;
      } else temp[n++]=i;
   } while (n<len*4);

   for(i=0;i<640;i++) col[i]=0;
   for(i=0;i<4;i++)
      for(j=0;j<len;j++)
	 for(k=7;k>=0;k--)
	    if(temp[j+i*len]&(1<<k)) col[j*8+7-k]|=(1<<i);
   for (i=0;i<len*8;i++) putpixel(x++,y,col[i]);
   return;
}

