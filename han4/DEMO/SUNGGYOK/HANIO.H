/****************************************************************************/
/*   TITLE              Hangul Library <HAN> 4.1                            */
/*   SUB-TITLE          header file - basic functions(50)                   */
/*   FILENAME           hanio.h                                             */
/*   DATE & TIME        06/29/92 (MON) 13:20                                */
/*   PROGRAMMER         Lee Hyun-Ho (ID:easyride)                           */
/****************************************************************************/

#ifndef __LARGE__
#error Not compiled in the large memory model.
#endif
/* 라지 이외의 메모리 모델로 컴파일되면 에러 메시지를 출력한 후 */
/* 컴파일을 중단하도록 한다.                                    */

/****************************************************************************/
/*                             Macro Constants                              */
/****************************************************************************/

/* init_han() 의 리턴값 */
enum
{
   OK_HAN,
   MEMORY_NOT_ENOUGH,
   HAN_FONT_NOT_FOUND,
   ENG_FONT_NOT_FOUND,
   SPC_FONT_NOT_FOUND,
   HAN_FONT_READ_ERROR,
   ENG_FONT_READ_ERROR,
   SPC_FONT_READ_ERROR,
   INVALID_GR_CARD,
   INITGRAPH_ERROR,
   ETC_ERROR
};

/* 속성 */
#define FONT_NORMAL             0x00
#define FONT_BOLD               0x01
#define FONT_OUTLINE            0x02
#define FONT_SHADOW             0x04
#define FONT_SHADE              0x08
#define FONT_UNDERLINE          0x10
#define FONT_INVERSE            0x20
#define FONT_VERT_DBL           0x40
#define FONT_HORIZ_DBL          0x80

/* 색 */
#if     !defined(__COLORS)
#define __COLORS
enum
{
   BLACK,               /* 어두운 색 */
   BLUE,
   GREEN,
   CYAN,
   RED,
   MAGENTA,
   BROWN,
   LIGHTGRAY,
   DARKGRAY,            /* 밝은 색 */
   LIGHTBLUE,
   LIGHTGREEN,
   LIGHTCYAN,
   LIGHTRED,
   LIGHTMAGENTA,
   YELLOW,
   WHITE
};
#endif

/* 박스 모양 */
enum
{
   BOX_H1V1,
   BOX_H1V2,
   BOX_H2V1,
   BOX_H2V2,
   BOX_USER_DEFINED
};

/* 커서 모양 */
enum
{
   BIG_CURSOR,
   SMALL_CURSOR,
   BOX_CURSOR,
   USER_DEFINED_CURSOR
};

/* 자판 형식 */
enum
{
   BUL2_TYPE,
   BUL3_TYPE
};

/* 스크린 버퍼의 최대 열 수 및 행 수 */
#define LIMITX_HAN              90
#define LIMITY_HAN              30

/* 화면에 출력된 문자의 종류 */
#define ENG                     0x00
#define HAN1                    0x01
#define HAN2                    0x02
#define EDGE                    0x03

/* 특수 문자 인식코드 */
#define SPC_ID                  212

/* 그래픽 모드 */
enum
{
   INIT_HGC640_0,
   INIT_HGC640_1,
   INIT_HGC720_0,
   INIT_HGC720_1,
   INIT_VGA,
   INIT_EGA,
   INIT_EGA_MONO,
   INIT_PC24,
   INIT_ATT,
   INIT_CORONA,
   INIT_TOSHIBA,
   INIT_SPC,
   INIT_TV
};

/* 터보 C 호환용 입력함수로 입력 가능한 문자의 수 */
#define MAX_STRLEN      127

/* getch2_han(), getch3_han() 의 리턴값 */
#define ESC_PRESSED      -1
#define BS_PRESSED       -2
#define ENTER_PRESSED    -3
#define TAB_PRESSED      -4
#define CTRLQ_PRESSED    -5
#define CTRLT_PRESSED    -6
#define CTRLY_PRESSED    -7
#define HAN_CHANGED      -8
#define COMPLETE         -9
#define NOT_COMPLETE    -10
#define IGNORE          -11

/* 한글 입력 스택의 크기 */
#define MAX_HAN_STACK    10

/* 초, 중, 종성이 없는 한글의 초, 중, 종성 코드 */
#define NO_CHO            1
#define NO_JUNG           2
#define NO_JONG           1

/* 초, 중, 종성이 모두 없는 한글의 코드 */
#define NO_HAN_CODE  0x8441
#define NO_HAN_STR   0x4184

/* 초, 중, 종성 및 아스키문자의 수 */
#define NO_HAN1          19
#define NO_HAN2          21
#define NO_HAN3          27
#define NO_ENG          256

/* 초, 중, 종성 폰트의 벌 수 */
#define NO_BUL1           8
#define NO_BUL2           4
#define NO_BUL3           4

/* 한글, 영문 폰트의 크기(바이트 단위) */
#define HAN_FONT_SIZE    32
#define ENG_FONT_SIZE    16

/* EGA/VGA 화면의 열 수 */
#define VGA_SCR_WIDTH    80

/* 널 포인터 */
#ifndef NULL
#   define      NULL     0L
#endif

/****************************************************************************/
/*                               Data Types                                 */
/****************************************************************************/

#define mini unsigned char

/* 한글 입력 스택의 자료형 */
typedef struct
{
   int top;
   unsigned element[MAX_HAN_STACK];
} han_stack_struct;

/* 한글 코드의 자료형 */
union hangul
{
   unsigned code;
   struct
   {
      unsigned  jong:5;
      unsigned  jung:5;
      unsigned   cho:5;
      unsigned ishan:1;
   } bit;
   mini bytes[2];
};

/****************************************************************************/
/*                            External Variables                            */
/****************************************************************************/

/* 폰트를 가리키는 포인터 */
extern mini (*han1_font)[NO_HAN1+1][HAN_FONT_SIZE],
            (*han2_font)[NO_HAN2+1][HAN_FONT_SIZE],
            (*han3_font)[NO_HAN3+1][HAN_FONT_SIZE],
            (*eng_font)[ENG_FONT_SIZE],
            (*spc_font)[HAN_FONT_SIZE],
            or_font[HAN_FONT_SIZE];
extern mini (*org_han1_font)[NO_HAN1+1][HAN_FONT_SIZE],
            (*org_han2_font)[NO_HAN2+1][HAN_FONT_SIZE],
            (*org_han3_font)[NO_HAN3+1][HAN_FONT_SIZE],
            (*org_eng_font)[ENG_FONT_SIZE],
            (*org_spc_font)[HAN_FONT_SIZE];

/* 스크린버퍼를 가리키는 포인터 */
extern mini (*scr_buff)[LIMITX_HAN][4];

/* 커서에 관한 변수들 */
extern mini han_cursor[HAN_FONT_SIZE+1],
            eng_cursor[ENG_FONT_SIZE+1];
extern mini *cursor_han;
extern char exist_cursor, draw_cursor;
extern int  cursor_twinkle_time;

/* 그래픽 모드에 관한 변수들 */
extern unsigned video_seg;
extern char in_vga_system;
extern char stay_in_gr_mode;

/* 좌표에 관한 변수들 */
extern int abs_maxx_han, abs_maxy_han;
extern int minx_han, maxx_han, miny_han, maxy_han;
extern int curx_han, cury_han;

/* 출력 옵셋 */
extern int output_offset_han;

/* 현재 속성 */
extern mini attr_han;

/* 현재 전경색, 배경색 */
extern mini color_han, bkcolor_han;

/* 입력 상태에 관한 변수들 */
extern char han_mode;
extern char ins_mode;
extern char bul3_mode;

/* 한글 입력에 관한 변수들 */
extern mini no_more_han;
extern int  adv_gets_han_index;
extern int  max_strlen_han;
extern han_stack_struct han_stack;
extern union hangul prv_han, cur_han;

/* 한/영 전환에 관한 변수들 */
extern char able_to_change_han;
extern mini han_change_code;
extern mini han_change_flag;
extern char is_han_change_extend;

/* 상태 라인 표시 여부 */
extern char is_status_on_han;

/* 폰트 화일과 BGI 화일의 패스 */
extern char *font_path_han;
extern char *bgi_path_han;

/* 사용자 정의 비트맵 박스의 모양을 가리키는 포인터 */
extern char *user_defined_box_shape;

/* 에러 메시지를 가리키는 포인터 */
extern char *error_exit_msg;

/* 각종 함수 포인터들 */
extern void (*han_change_func) (void);
extern void (*ins_change_func) (void);
extern void (*han_wait_func) (void);
extern void (*redirect_func) (char *);

/* 한자 버퍼에 관한 변수들 */
extern struct
{
   unsigned code;
   char font[HAN_FONT_SIZE];
} *hanja_buff;
extern unsigned hanja_buff_ptr;
extern unsigned hanja_buff_size;

/****************************************************************************/
/*                   Prototypes of the External Functions                   */
/****************************************************************************/

int  init_han(void);
void close_han(void);
int  _init_han(int mode);
void _close_han(int mode);
void set_han_change_key(int code, int is_extend, int flag);
void set_bgi_font_path(char *bgi_path, char *font_path);

void putch_han(char *string);
int  puts_han(char *string);
void cputs_han(char *string);
int  printf_han(char *format,...);
int  scanf_han(char *format,...);
int  gets_han(char *string);
void clrscr_han(void);
void gotoxy_han(int x, int y);

void set_window_han(int left, int top, int right, int bottom);
void init_window_han(void);
int  get_abs_maxx_han(void);
int  get_abs_maxy_han(void);
int  get_maxx_han(void);
int  get_maxy_han(void);
int  get_minx_han(void);
int  get_miny_han(void);
int  get_curx_han(void);
int  get_cury_han(void);
int  get_attr_han(void);
int  get_color_han(void);
int  get_bkcolor_han(void);
void set_attr_han(int attr);
void set_color_han(int color);
void set_bkcolor_han(int color);
void set_vbcolor_han(int color, int bkcolor);

void status_on_han(void);
void status_off_han(void);
void draw_status_han(void);
void set_to_han_mode(void);
void set_to_eng_mode(void);
void enable_han_change(void);
void disable_han_change(void);
int  is_han_mode(void);
int  get_keyboard_type(void);
void set_keyboard_type(int type);
void default_han_change_func(void);
void default_ins_change_func(void);

void draw_box_han(int left, int top, int right, int bottom, int border_num);
char *save_text_han(int left, int top, int right, int bottom);
void restore_text_han(int x, int y, char *scr_data);

void temp_make_han(union hangul *prv, union hangul *cur);
void make_han(union hangul *prv, union hangul *cur, mini *ret_han);
void push_han(unsigned code);
void pop_han(unsigned *code);

#undef mini
