/****
    Street Fighter ][ Header File
    Original Game By CapCom
    IBM PC Game By Jung Young Dug ( KETEL ID : WD40 )
    Program Skill level : 1990.1 (0.7)
    Source Code Bolarnd C++ 2.0

    스파2 헤더 화일 
    원작 CAPCOM 
    IBM PC 버전 정영덕
    프로그램 기술 정도 : 1990년 1월 수준
    소스코드 볼란드 C++ 2.0
****/

#define MAXIMG 120    // Maximum image Size
#define MAXSPR 120    // Maximum Sprite Size

/**
   define Warrior ID Number
   캐릭터별 고유 숫자
**/

#define RYU     0
#define HONDA   1
#define BLANK   2
#define GUILE   3
#define KEN     4
#define CHUNLI  5
#define ZANGIEF 6
#define DALSIM  7

/* 플레이어 종류 */
#define HUMAN  0  // Player is Human  사람이 조정    
#define COMPU  1  // Player is Computer  컴퓨터가 조정
#define REMOTE 2  // Player connected Remote Modem  모뎀으로 연결

/* 루틴 제어 신호 정의 */ 
#define EXIT      1  // Keyboard Signal is EXIT ( ESC key pressed )
#define BREAK     2  // Keyboard Signal is BREAK ( F10 Key pressed )
#define CONTINUE  3  // Keyboard Signal is CONTINUE
#define NEWPLAYER 4  // New Player Come on Signal

/* 플레이어 조정 대상이 설정되지 않았다. */
#define NOTSELECT (-1)     // Player is not Selected ( use Select Procedure )

/**
   Game Environment Structure
   게임 환경 변수 구조
**/

typedef struct
{
  int t ; // match time  한판당 대전 시간
  int n,mn,tr ; // match number 현재 대전횟수, 총 대전횟수
  unsigned char Bk    ; // Back Ground : RYU=0,HONDA=1, ...
  unsigned char loser[12] ; // 게임에서 진 케릭터 명단
} GameENV ;

#define MAXASEQ  2000  // maximum Actor Sequence 최대 동작 흐름수
#define MAXACT   128   // maximum Action Size 최대 동작 수
#define MAXACTOR 400   // 최대 동작 순간 수

/**
   Action Structure 동작 구조 
   Action is time Sequence of Actor 동작은 Actor의 시간적 흐름으로 정의
   Action is Animation 동작은 animation과 같다.
**/
typedef struct
{
  unsigned char n[MAXACT]     ; // 한동작의 actor수
  int As[MAXASEQ],Ap[MAXACT]  ; // 동작 흐름 버퍼, 동작 흐름 포인터
} ACTION ;

/**
   Actor Structure   Actor 구조
   Actor is transition state of Sprite or Scene
   Actor는 스프라이트나 그림의 한순간을 나타내며, 각종 정보가 포함된 상태
**/
typedef struct
{
   unsigned char sp ;  // sprite pointer  스프라이트 번호
   char dx,dy ;        // relative move position of X,Y  상대 좌표 움직임
   unsigned int i ;    // Actor Information 동작상태 
} ACTOR ;

/*
  조합 공격 구조 ( 적과 나의 현재 상태의 조합에 의한 공격 )
  
*/
typedef struct
{
   unsigned char lc,kc,ann,dann,mc,vfn[13] ;
} COMBRULE ;

/*
  순차 공격 구조 ( 키보드를 순차적으로 눌렀을때 나오는 공격 )
*/
typedef struct
{
   char s[10],vfn[13],code ;
}  KEYRULE ;

#define MAXCR 20  /* 최대 조합공격 갯수 */
#define MAXKR 14  /* 최대 순차공격 갯수 */

/**
   Player Structure   플레이어 구조
**/

typedef struct
{
   int ctrl,pl,end ; // Player state & control & player type ( RYU,KEN .. )
   int power,resis,energe,ve ;  // Player power & resistance & energe
   int x,y,ann,ani,ar,mirr ;    // Player Current Action #, Action index, Actor
   int x2,y2,ann2,ani2,ar2,mirr2 ;   // temporary action
   unsigned int i,i2 ;      // player Actor Information 1,2
   int nr,win,scr,chicken ;   // Player Near Distance
   char hit,san,can ;
   char far *key2asc ; // Player key state
   KEYRULE far *KR ;  // Spectial Attack Key Pattern
   KEYBUFF far *KB ;  // RingBuffer for Keyboard
   COMBRULE far *CR ; // Combination Attack RULE
   CTRLKEY far *K  ;  // Player Control Key
   ACTION  far *AN ;  // Player Action
   ACTOR   far *AR ;  // Player Actor
   Sprite  far *Spr ; // Player Sprite
   Image   far *Img ; // Player Image
} PLAYER ;

