
#define  CR      13    /* 해당 키의 애스키 코드       */
#define  ESC     27
#define  SPACE   32
#define  F1     315    /* 해당 키의 확장키 코드 + 256 */
#define  F2     316
#define  F3     317
#define  F4     318
#define  F5     319
#define  F6     320
#define  F7     321
#define  F8     322
#define  F9     323
#define  F10    324
#define  HOME   327
#define  UP     328
#define  PGUP   329
#define  LEFT   331
#define  RIGHT  333
#define  END    335
#define  DOWN   336
#define  PGDN   337
#define  INS    338
#define  DEL    339

/***************************************************/
/* 함수값 : 일반키 -> 키의 애스키 코드             */
/*          특수키 -> 키의 확장키 코드+256         */
/***************************************************/
int get_key()
    {
    unsigned   key,lo,hi;

    key = bioskey(0);         /* 눌려진 키의 코드  */
    lo  = key & 0x00FF;       /* 코드의 하위 바이트*/
    hi  =(key & 0xFF00) >> 8; /* 코드의 상위 바이트*/

    if (lo==0)
	return  hi+256;     /* 특수키가 눌려진 경우*/
    else
	return  lo;         /* 일반키가 눌려진 경우*/
    }

/***************************************************/
/* 함수값 : 키가 눌려진 경우   -> 키의 코드        */
/*          눌려지지 않은 경우 -> 0                */
/***************************************************/
int in_key()
    {
    return( ( kbhit() ) ? get_key() : kbhit() );
    }

/***************************************************/
/* (x열, y행) 이후에 msg를 표시하고 문자열을       */
/* str에 입력받는다.                               */
/***************************************************/
void xy_gets(int x, int y, char *msg, char *str)
    {
    gotoxy(x, y);
    cputs(msg);
    cscanf("%s", str);
    }

/***************************************************/
/* 함수값 : (x열, y행)에 표시되어 있는 문자의 코드 */
/***************************************************/
int xy_vgetch(int x, int y)
    {
    unsigned  v_s;              /* 비데오 세그먼트 */

    if ( peekb(0, 0x449) == 7 )	v_s = 0xB000;
    else                       	v_s = 0xB800;

    return ( peekb(v_s, 160*(y-1)+2*(x-1)) );
    }

/***************************************************/
/* (x열, y행) 이후에 표시되어 있는 문자열을        */
/* str에 구한다(문자열 길이는 n).                  */
/***************************************************/
void xy_vgets(int x, int y, int n, char *str)
    {
    int       i;
    unsigned  v_s;              /* 비데오 세그먼트 */

    if ( peekb(0, 0x449) == 7 )	v_s = 0xB000;
    else                        v_s = 0xB800;

    for (i=x ; i<x+n ; i++)
	{
	*str = peekb(v_s, 160*(y-1)+2*(i-1));
        if (  *str==0x9  )
	    break;
	str++;
	}
    *str = '\0';                /* 문자열의 끝문자 */
    }

/*

main()
    {
    char  str[80];

    xyvgets(1,1, 80, str);
    printf("%s\n", str);
    }
*/
