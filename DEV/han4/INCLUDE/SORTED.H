void _close_han(int mode);
int _init_han(int mode);
void aclear_text_han(int left, int top, int right, int bottom, int attr);
void aclrscr_han(int attr);
int  adv_gets_han(int x, int y, char *string, int limit, int attr, char *user_exit_key);
void adv_puts_han(char *string, int indent);
void aprintf_han(int x, int y, int attr, char *format,...);
void aput_eng_font(int x, int y, mini code, mini attr);
void aput_han_font(int x, int y, mini code1, mini code2, mini attr);
void aputch_han(int x, int y, char *string, int attr);
void aputs_han(int x, int y, char *string, int attr);
int arrange_string(char *string, int width);
void center_puts_han(int y, char *string, int color, int attr);
int choose_gr_mode(void);
void choose_hanja(char *hangul_code, char *hanja_code);
void clear_key_buff(void);
void clear_text_han(int left, int top, int right, int bottom);
void close_han(void);
void clrscr_han(void);
int convert_han_code(char *string, int source_code, int dest_code);
void cputs_han(char *string);
void default_han_change_func(void);
void default_ins_change_func(void);
int dir_box_long(int box_x, int box_y, char *mask, char *file_name);
int dir_box_short(int box_x, int box_y, char *mask, char *file_name);
void disable_han_change(void);
void draw_bit_map_box_han(int left, int top, int right, int bottom, char *bit_map)
void draw_box_han(int left, int top, int right, int bottom, int border_num);
void draw_cursor_han(int x, int y);
void draw_horiz_line(int left, int top, int width, int color);
void draw_status_han(void);
void draw_var_box_han(int left, int top, int right, int bottom, int border_num, int attr, int delay_time);
void draw_vert_line(int left, int top, int height, int color);
void enable_han_change(void);
void enprintf_han(int x, int y, int limit, char *format,...);
void enputs_han(int x, int y, char *string, int length);
void eprintf_han(int x, int y, char *format,...);
#define eputch_han(x,y,code) put_eng_font(x, y, code);
void eputs_han(int x, int y, char *string);
void error_exit_han(char *func_name, int exit_code);
void free_font(char *han_font_ptr, char *eng_font_ptr, char *spc_font_ptr);
int get_abs_maxx_han(void);
int get_abs_maxy_han(void);
int  get_attr_han(void);
int  get_bkcolor_han(void);
int  get_color_han(void);
int get_curx_han(void);
int get_cury_han(void);
int get_key_han(int *ascii);
int  get_keyboard_type(void);
mini get_keyflag_han(void);
int  get_max_strlen_han(void);
int get_maxx_han(void);
int get_maxy_han(void);
int get_minx_han(void);
int get_miny_han(void);
int  get_number_han(int x, int y, char *number, int limit, int attr, char *user_exit_key);
int  get_output_offset_han(void);
int  get_scr_buff_attr(int x, int y);
int  get_scr_buff_bkcolor(int x, int y);
int  get_scr_buff_code(int x, int y);
int  get_scr_buff_color(int x, int y);
int  get_scr_buff_id(int x, int y);
unsigned get_video_seg(void);
int  get_yesno_han(int x, int y, int attr);
int  getch2_han(char *ret_str, char *exit_key, int edit_cursor);
int  getch3_han(char *ret_str, char *exit_key, int edit_cursor);
int getch_han(void);
int  gets_han(char *string);
void gotoxy_han(int x, int y);
void hanja_to_hangul(char *hanja_code, char *hangul_code);
void hide_cursor_han(void);
int init_han(void);
void init_window_han(void);
int  is_han_mode(void);
int  is_keyflag_han(mini flag);
int is_number(char *string);
int  is_vga_mode(void);
char *lefttrim(char *string);
void make_han(union hangul *prv, union hangul *cur, mini *ret_han);
int menu_han(menu_struct *menu_data);
void modify_image(unsigned char *dest, unsigned char *src, unsigned char bytes, unsigned char attr);
void modify_text_attr(int left, int top, int right, int top, int attr);
void modify_text_color(int left, int top, int right, int top, int color);
void naprintf_han(int x, int y, int length, int attr, char *format,...);
void naputs_han(int x, int y, char *string, int length, int attr);
void nprintf_han(int x, int y, int length, char *format,...);
void nputs_han(int x, int y, char *string, int length);
void nvprintf_han(int x, int y, int length, int color, char *format,...);
void nvputs_han(int x, int y, char *string, int length, int color);
int play(char *string);
void pop_han(unsigned *code);
int popup_han(int x, int y, char **string, int number, int *current);
int printf_han(char *format,...);
int pulldown_han(pulldown_menu_struct *menu_data);
void push_han(unsigned code);
void put_eng_font(int x, int y, mini code);
void put_han_font(int x, int y, mini code1, mini code2);
void putch_han(char *string);
void putimage_16(int x, int y, unsigned char *code);
void putimage_8(int x, int y, unsigned char *code);
int puts_han(char *string);
void rand_clear_text_han(int left, int top, int right, int bottom, int attr, unsigned count, unsigned delay_time);
int  read_eng_font(char **font_ptr, char *eng_font_file);
int  read_han_font(char **font_ptr, char *han_font_file);
int  read_spc_font(char **font_ptr, char *spc_font_file);
int  replace_font(char *han_font_file, char *eng_font_file, char *spc_font_file);
void restore_text_han(int x, int y, char *scr_data);
void return_to_org_font(int return_han, int return_eng, int return_spc);
char *righttrim(char *string);
char *save_text_han(int left, int top, int right, int top);
int scanf_han(char *format,...);
void set_attr_han(int attr);
void set_bgi_font_path(char *bgi_path, char *font_path);
void set_bkcolor_han(int color);
void set_color_han(int color);
void set_cursor_han(int han_no, char *han_shape, int eng_no, char *eng_shape);
void set_font(char *han_font_ptr, char *eng_font_ptr, char *spc_font_ptr);
void set_han_change_func(void (*func) (void));
void set_han_change_key(int code, int is_extend, int flag);
void set_han_wait_func(void (*func) (void));
void set_ins_change_func(void (*func) (void));
void set_keyboard_type(int type);
void set_keyflag_han(mini flag);
void set_max_strlen_han(int length);
void set_output_offset_han(int output_offset);
void set_to_eng_mode(void);
void set_to_gr_mode(int mode);
void set_to_han_mode(void);
void set_to_text_mode(int mode);
void set_twinkle_time(int twinkle_time);
void set_vbcolor_han(int color, int bkcolor);
void set_window_han(int left, int top, int right, int bottom);
void setactivepage_han(int page);
void show_cursor_han(void);
void status_off_han(void);
void status_on_han(void);
void temp_make_han(union hangul *prv, union hangul *cur);
void toggle_keyflag_han(mini flag);
void vaprintf_han(int x, int y, int color, int attr, char *format,...);
void vaputch_han(int x, int y, char *string, int color, int attr);
void vaputs_han(int x, int y, char *string, int color, int attr);
void vbprintf_han(int x, int y, int color, int bkcolor, char *format,...);
void vbputch_han(int x, int y, char *string, int color, int bkcolor);
void vbputs_han(int x, int y, char *string, int color, int bkcolor);
void vclear_text_han(int left, int top, int right, int bottom, int color);
void vclrscr_han(int color);
void vprintf_han(int x, int y, int color, char *format,...);
void vput_eng_font(int x, int y, mini code, mini color);
void vput_han_font(int x, int y, mini code1, mini code2, mini color);
void vputch_han(int x, int y, char *string, int color);
void vputs_han(int x, int y, char *string, int color);
int wait_key_han(int second);
int what_byte(char *string, int chk_pos);
void xprintf_han(int x, int y, char *format,...);
void xputch_han(int x, int y, char *string);
void xputs_han(int x, int y, char *string);
void xscrolldn_han(int left, int top, int right, int top);
void xscrollup_han(int left, int top, int right, int top);
void zoomed_out_16(int x, int y, unsigned char *font, unsigned char attr);
void zoomed_out_8(int x, int y, unsigned char *font, unsigned char attr);
